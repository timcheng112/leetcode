Time: O(n)
Space: O(n)

/**
 * @param {number[]} nums
 * @return {number}
 */
var longestConsecutive = function (nums) {
    // 1. instantiate nums set
    const set = new Set(nums);

    // 2. iterate thru set
    // for each starting num (num - 1 does not exist in set), check next (+1) values
    let longest = 0;
    for (const num of set) {
        if (!set.has(num - 1)) {
            let streak = 1;
            let i = 1;
            while (set.has(num + i)) {
                i++;
                streak++;
            }
            longest = Math.max(streak, longest)
        }
    }
    return longest
};
