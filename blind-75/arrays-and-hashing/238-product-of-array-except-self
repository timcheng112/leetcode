Time: O(n)
Space: O(1) extra space, O(n) output array

/**
 * @param {number[]} nums
 * @return {number[]}
 */
var productExceptSelf = function (nums) {
    const prefix = [1, nums[0]];

    // store the prefix products
    for (let i = 2; i < nums.length; i++) {
        const curr = prefix[i - 1] * nums[i - 1];
        prefix.push(curr);
    }

    // get product
    let postfix = 1;
    for (let i = nums.length - 1; i >= 0; i--) {
        prefix[i] *= postfix;
        postfix *= nums[i];
    }

    return prefix;
};
