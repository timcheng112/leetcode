The solution works for both Leetcode questions 3025: Find the Number of Ways to Place People I and 3027: Find the Number of Ways to Place People II.

Time: O(n^2)
Space: O(1)

/**
 * @param {number[][]} points
 * @return {number}
 */
var numberOfPairs = function(points) {
    points.sort((a, b) => a[0] === b[0] ? b[1] - a[1] : a[0] - b[0]);

    let count = 0;
    for (let i = 0; i < points.length; i++) {
        const ceiling = points[i][1];
        let floor = -Infinity;
        for (let j = i + 1; j < points.length; j++) {
            if (points[j][1] > floor && points[j][1] <= ceiling) {
                count++;
                floor = points[j][1];
                if (floor === ceiling) break;
            }
        }
    }
    return count;
};
